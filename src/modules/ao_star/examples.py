from typing import Tuple, List
from .ao_star import GraphStructure, HeuristicValues, NodeName


def get_example(n: int) -> Tuple[GraphStructure, HeuristicValues, List[NodeName]]:
    match n:
        case 1:
            final_nodes = ["D", "I", "J", "K"]
            graph = {
                "S": {"OR": [("A", 2), ("B", 5)]},
                "A": {"AND": [("C", 1), ("D", 1), ("E", 1)]},
                "B": {"AND": [("F", 1), ("G", 3)]},
                "C": {"OR": [("H", 2), ("I", 8)]},
                "E": {"OR": [("I", 7), ("J", 1)]},
                "F": {"OR": [("J", 4), ("K", 3)]},
                "G": {"OR": [("K", 6), ("L", 5)]},
                "D": {},
                "H": {},
                "I": {},
                "J": {},
                "K": {},
                "L": {},
            }
            H = {
                "S": 10,
                "A": 14,
                "B": 13,
                "C": 2,
                "D": 0,
                "E": 1,
                "F": 4,
                "G": 5,
                "H": 5,
                "I": 0,
                "J": 0,
                "K": 0,
                "L": 7,
            }
        case 2:
            final_nodes = ["J", "K", "L", "M", "N"]
            graph = {
                "S": {"OR": [("A", 2), ("B", 1)]},
                "A": {"AND": [("C", 1), ("D", 1), ("E", 1)]},
                "B": {"AND": [("F", 1), ("G", 3), ("H", 2)]},
                "C": {"OR": [("I", 5), ("J", 4)]},
                "D": {"OR": [("J", 1), ("K", 1)]},
                "E": {"OR": [("K", 1), ("L", 1)]},
                "F": {"OR": [("L", 4), ("M", 3)]},
                "G": {"OR": [("M", 6), ("N", 5)]},
                "H": {"OR": [("N", 6), ("O", 5)]},
                "I": {},
                "J": {},
                "K": {},
                "L": {},
                "M": {},
                "N": {},
                "O": {},
                "P": {},
            }
            H = {
                "S": 2,
                "A": 4,
                "B": 6,
                "C": 8,
                "D": 10,
                "E": 12,
                "F": 14,
                "G": 12,
                "H": 10,
                "I": 8,
                "J": 6,
                "K": 4,
                "L": 2,
                "M": 2,
                "N": 4,
                "O": 6,
                "P": 8,
            }
        case 3:
            final_nodes = ["G", "H"]
            graph = {
                "S": {"OR": [("A", 5), ("B", 3)]},
                "A": {"OR": [("C", 1), ("D", 1), ("E", 5), ("F", 1)]},
                "B": {"OR": [("G", 2), ("H", 8), ("I", 7), ("J", 1)]},
                "C": {},
                "D": {},
                "E": {},
                "F": {},
                "G": {},
                "H": {},
                "I": {},
                "J": {},
            }
            H = {
                "S": 2,
                "A": 4,
                "B": 6,
                "C": 8,
                "D": 10,
                "E": 12,
                "F": 14,
                "G": 12,
                "H": 10,
                "I": 8,
                "J": 6,
            }
        case 4:
            final_nodes = ["N", "M", "I", "J", "K"]
            graph = {
                "S": {"OR": [("A", 2), ("B", 5)]},
                "A": {"AND": [("C", 1), ("D", 1)]},
                "B": {"AND": [("E", 5), ("F", 1)]},
                "C": {"OR": [("G", 2), ("H", 8)]},
                "D": {"OR": [("I", 7), ("J", 1)]},
                "E": {"OR": [("K", 7), ("L", 1)]},
                "F": {"OR": [("M", 4), ("N", 3)]},
                "G": {},
                "H": {},
                "I": {},
                "J": {},
                "K": {},
                "L": {},
                "M": {},
                "N": {},
            }
            H = {
                "S": 2,
                "A": 4,
                "B": 6,
                "C": 8,
                "D": 10,
                "E": 12,
                "F": 14,
                "G": 12,
                "H": 10,
                "I": 8,
                "J": 6,
                "K": 4,
                "L": 2,
                "M": 2,
                "N": 4,
            }
        case 5:
            final_nodes = ["P", "O", "R", "Q", "W", "U", "T", "V", "M"]
            graph = {
                "S": {"OR": [("A", 15), ("B", 2)]},
                "A": {"AND": [("C", 3), ("D", 4)]},
                "B": {"AND": [("E", 5), ("F", 6)]},
                "C": {"OR": [("G", 7), ("H", 8)]},
                "D": {"OR": [("I", 9), ("J", 8)]},
                "E": {"OR": [("K", 7), ("L", 6)]},
                "F": {"OR": [("M", 5), ("N", 4)]},
                "G": {"OR": [("O", 3), ("P", 2)]},
                "H": {"OR": [("P", 2), ("R", 2)]},
                "I": {"OR": [("R", 1), ("Q", 2)]},
                "J": {"OR": [("Q", 2)]},
                "K": {"OR": [("T", 3), ("U", 2)]},
                "L": {"OR": [("U", 4), ("V", 2)]},
                "M": {"OR": [("V", 5), ("W", 2)]},
                "N": {"OR": [("W", 6)]},
                "O": {},
                "P": {},
                "R": {},
                "Q": {},
                "T": {},
                "U": {},
                "V": {},
                "W": {},
            }
            H = {
                "S": 1,
                "A": 2,
                "B": 3,
                "C": 4,
                "D": 5,
                "E": 6,
                "F": 7,
                "G": 8,
                "H": 9,
                "I": 8,
                "J": 7,
                "K": 6,
                "L": 5,
                "M": 4,
                "N": 3,
                "O": 2,
                "P": 1,
                "R": 2,
                "Q": 3,
                "T": 4,
                "U": 5,
                "V": 6,
                "W": 7,
            }
        case _:
            raise ValueError(f"Invalid example number: {n}")

    return graph, H, final_nodes  # type: ignore
